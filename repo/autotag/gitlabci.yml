
repo-autotag:
  image: ubuntu
  stage: build
  rules:
    # run job on commits to master
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    # run this job if there's changes in the tags
    - if: $CI_COMMIT_TAG
      when: always
    # run job if this directory has changes
    - changes:
      - repo/autotag/autotag.sh
      - repo/autotag/gitlabci.yml
      when: always
    # else do not run job (so branches dont generate locked manifests)
    - when: never
  variables:
    # Don't prompt anything during apt install
    DEBIAN_FRONTEND: 'noninteractive'

  # These are based on https://forum.gitlab.com/t/is-it-possible-to-commit-artifacts-into-the-git/22218/7
  before_script:
    - 'apt-get update -qy && apt-get install openssh-client git curl python -qqy '
    - mkdir -p $HOME/.ssh
    - chmod 700 $HOME/.ssh
    - 'echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - mkdir ~/bin
    - export PATH=~/bin:$PATH
    - curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
    - chmod a+x ~/bin/repo
    # above this comment should be consolidated into cusotm docker image
    - eval `ssh-agent -s`
    - echo "${SSH_PRIVATE_KEY_B64}" | base64 -d | tr -d '\r' |  ssh-add - > /dev/null # add ssh ke
    - git config --global user.email "ssfivy-gitlabci@example.com"
    - git config --global user.name  "ssfivy-gitlabci"

  script:
    - mkdir -p $HOME/repo-checkout
    - cd $HOME/repo-checkout
    - repo init -u https://gitlab.com/ssfivy/learning-repo.git -b master
    - repo sync
    - bash learning-contents/repo/autotag/autotag.sh
